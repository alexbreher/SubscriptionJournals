// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubscriptionJournals;

namespace SubscriptionJournals.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210904020503_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SubscriptionJournals.Models.JournalsViewModel", b =>
                {
                    b.Property<int>("journal_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("author")
                        .HasColumnType("int");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("journal_Id");

                    b.HasIndex("author");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("SubscriptionJournals.Models.SubscriptionsViewModel", b =>
                {
                    b.Property<int>("subscription_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("subscribesTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("subscriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("subscriptor")
                        .HasColumnType("int");

                    b.HasKey("subscription_Id");

                    b.HasIndex("subscribesTo");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("SubscriptionJournals.Models.UsersViewModel", b =>
                {
                    b.Property<int>("user_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("followers")
                        .HasColumnType("int");

                    b.Property<int>("following")
                        .HasColumnType("int");

                    b.Property<int>("journalsPublished")
                        .HasColumnType("int");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("token")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("user_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SubscriptionJournals.Models.JournalsViewModel", b =>
                {
                    b.HasOne("SubscriptionJournals.Models.UsersViewModel", "Users")
                        .WithMany("Journals")
                        .HasForeignKey("author")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SubscriptionJournals.Models.SubscriptionsViewModel", b =>
                {
                    b.HasOne("SubscriptionJournals.Models.UsersViewModel", "Users")
                        .WithMany("Subscriptions")
                        .HasForeignKey("subscribesTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SubscriptionJournals.Models.UsersViewModel", b =>
                {
                    b.Navigation("Journals");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
